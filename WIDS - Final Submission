{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "e5f66858",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import pylab \n",
    "import seaborn as sns\n",
    "import lightgbm as lgb\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import scipy.stats as stat\n",
    "import imblearn\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "import plotly.express as px\n",
    "import matplotlib\n",
    "#import shap\n",
    "import xgboost as xgb\n",
    "from sklearn.preprocessing import StandardScaler, OrdinalEncoder,LabelEncoder, MinMaxScaler\n",
    "from sklearn.model_selection import train_test_split, cross_val_predict,cross_validate, cross_val_score,GridSearchCV\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\n",
    "from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score,confusion_matrix,classification_report,roc_auc_score,roc_curve\n",
    "from sklearn import preprocessing\n",
    "from catboost import CatBoostRegressor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.preprocessing import FunctionTransformer\n",
    "from datetime import datetime, timedelta\n",
    "from scipy.stats import zscore\n",
    "from imblearn import under_sampling, over_sampling\n",
    "from imblearn.over_sampling import SMOTE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "361a933f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 375734 entries, 0 to 375733\n",
      "Columns: 246 entries, index to wind-vwnd-925-2010-20\n",
      "dtypes: float64(240), int64(4), object(2)\n",
      "memory usage: 705.2+ MB\n",
      "None\n",
      "               index            lat            lon  \\\n",
      "count  375734.000000  375734.000000  375734.000000   \n",
      "mean   187866.500000       0.592766       0.517964   \n",
      "std    108465.207359       0.251744       0.272059   \n",
      "min         0.000000       0.000000       0.000000   \n",
      "25%     93933.250000       0.409091       0.300000   \n",
      "50%    187866.500000       0.590909       0.533333   \n",
      "75%    281799.750000       0.818182       0.766667   \n",
      "max    375733.000000       1.000000       1.000000   \n",
      "\n",
      "       contest-pevpr-sfc-gauss-14d__pevpr  nmme0-tmp2m-34w__cancm30  \\\n",
      "count                       375734.000000             375734.000000   \n",
      "mean                           276.744064                 10.801682   \n",
      "std                            198.085182                 10.952417   \n",
      "min                             -2.310000                -14.960000   \n",
      "25%                            104.062500                  1.550000   \n",
      "50%                            250.320000                  9.950000   \n",
      "75%                            420.010000                 20.230000   \n",
      "max                           1185.140000                 36.080000   \n",
      "\n",
      "       nmme0-tmp2m-34w__cancm40  nmme0-tmp2m-34w__ccsm30  \\\n",
      "count             375734.000000            359800.000000   \n",
      "mean                  12.726739                10.099323   \n",
      "std                   11.073553                10.339626   \n",
      "min                  -14.970000               -11.720000   \n",
      "25%                    3.650000                 1.640000   \n",
      "50%                   11.890000                 9.490000   \n",
      "75%                   22.110000                18.740000   \n",
      "max                   36.030000                33.390000   \n",
      "\n",
      "       nmme0-tmp2m-34w__ccsm40  nmme0-tmp2m-34w__cfsv20  \\\n",
      "count            375734.000000            375734.000000   \n",
      "mean                 11.638229                10.733886   \n",
      "std                  10.574276                 9.403434   \n",
      "min                 -17.560000               -13.720000   \n",
      "25%                   3.080000                 3.390000   \n",
      "50%                  11.600000                10.890000   \n",
      "75%                  20.360000                18.330000   \n",
      "max                  34.640000                35.750000   \n",
      "\n",
      "       nmme0-tmp2m-34w__gfdlflora0  ...  wind-vwnd-925-2010-11  \\\n",
      "count                375734.000000  ...          375734.000000   \n",
      "mean                     11.772646  ...              -1.209959   \n",
      "std                      10.689967  ...              37.317333   \n",
      "min                     -13.330000  ...             -94.570000   \n",
      "25%                       2.970000  ...             -27.200000   \n",
      "50%                      11.280000  ...              -3.200000   \n",
      "75%                      20.300000  ...              24.940000   \n",
      "max                      38.350000  ...             113.920000   \n",
      "\n",
      "       wind-vwnd-925-2010-12  wind-vwnd-925-2010-13  wind-vwnd-925-2010-14  \\\n",
      "count          375734.000000          375734.000000          375734.000000   \n",
      "mean               -8.109918               6.800684              19.251970   \n",
      "std                36.201507              38.458878              25.288526   \n",
      "min               -89.940000             -64.870000             -39.280000   \n",
      "25%               -33.350000             -19.650000               1.960000   \n",
      "50%                -9.390000               2.330000              20.050000   \n",
      "75%                17.960000              28.660000              35.090000   \n",
      "max                96.550000             106.420000              91.760000   \n",
      "\n",
      "       wind-vwnd-925-2010-15  wind-vwnd-925-2010-16  wind-vwnd-925-2010-17  \\\n",
      "count          375734.000000          375734.000000          375734.000000   \n",
      "mean              -17.697565              -9.846867              -6.231860   \n",
      "std                31.946748              34.164678              27.050356   \n",
      "min              -100.560000            -106.080000             -93.980000   \n",
      "25%               -40.030000             -32.170000             -20.170000   \n",
      "50%               -16.710000              -8.560000              -6.030000   \n",
      "75%                 4.390000              10.500000              11.630000   \n",
      "max                56.550000              83.890000              64.850000   \n",
      "\n",
      "       wind-vwnd-925-2010-18  wind-vwnd-925-2010-19  wind-vwnd-925-2010-20  \n",
      "count          375734.000000          375734.000000          375734.000000  \n",
      "mean               16.014364              10.489945              11.296334  \n",
      "std                25.847455              25.070435              25.113214  \n",
      "min               -52.610000             -66.110000             -57.610000  \n",
      "25%                -0.360000              -6.790000              -5.570000  \n",
      "50%                18.650000              11.860000              11.650000  \n",
      "75%                31.210000              29.040000              29.180000  \n",
      "max                90.390000              76.890000              88.660000  \n",
      "\n",
      "[8 rows x 244 columns]\n"
     ]
    }
   ],
   "source": [
    "train_data= pd.read_csv(\"D:/portfolio project 25-1/widsdatathon2023/Data/train_data.csv\")\n",
    "test_data=pd.read_csv(\"D:/portfolio project 25-1/widsdatathon2023/Data/test_data.csv\")\n",
    "print(train_data.info())\n",
    "print(train_data.describe())"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "0c282c73",
   "metadata": {},
   "source": [
    "Get the target value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "909e96f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'contest-tmp2m-14d__tmp2m'"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for i in train_data.columns:\n",
    "    if i not in test_data.columns:\n",
    "        target = i\n",
    "target\n"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "768a68fe",
   "metadata": {},
   "source": [
    "Change the Startdate to Datetime format"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "a97a4245",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data.startdate = pd.to_datetime(train_data.startdate)\n",
    "test_data.startdate = pd.to_datetime(test_data.startdate)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "e2d1b40e",
   "metadata": {},
   "source": [
    "EDA"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "9fbf4c9f",
   "metadata": {},
   "source": [
    "Insight  1: Time gap\n",
    "\n",
    "There is a space between the train data and the test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "c857d509",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1152x144 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,1, figsize=(16,2))\n",
    "ax.set_title('Time Series Data')\n",
    "sns.scatterplot(data = train_data, x = 'startdate', y = 1, marker='o', linewidth=0, label = 'train')\n",
    "sns.scatterplot(data = test_data, x = 'startdate', y = 1, marker='o', linewidth=0, label = 'test')\n",
    "ax.set_xlim([train_data['startdate'].iloc[0], test_data['startdate'].iloc[-1]])\n",
    "plt.show(fig)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "6fac2e33",
   "metadata": {},
   "source": [
    "Insight 2: Number of place where taking observation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "b73a2272",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "startdate\n",
       "2014-09-01    514\n",
       "2014-09-02    514\n",
       "2014-09-03    514\n",
       "2014-09-04    514\n",
       "2014-09-05    514\n",
       "             ... \n",
       "2016-08-27    514\n",
       "2016-08-28    514\n",
       "2016-08-29    514\n",
       "2016-08-30    514\n",
       "2016-08-31    514\n",
       "Name: contest-tmp2m-14d__tmp2m, Length: 731, dtype: int64"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.groupby('startdate')[target].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "efafda49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "startdate\n",
       "2022-11-01    514\n",
       "2022-11-02    514\n",
       "2022-11-03    514\n",
       "2022-11-04    514\n",
       "2022-11-05    514\n",
       "             ... \n",
       "2022-12-27    514\n",
       "2022-12-28    514\n",
       "2022-12-29    514\n",
       "2022-12-30    514\n",
       "2022-12-31    514\n",
       "Name: index, Length: 61, dtype: int64"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data.groupby('startdate')['index'].count()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "de885e1f",
   "metadata": {},
   "source": [
    "Insight 3: Some location in train set do not include in test set\n",
    "\n",
    "Grouping Lat and Lon to have the location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "db72019b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>startdate</th>\n",
       "      <th>contest-pevpr-sfc-gauss-14d__pevpr</th>\n",
       "      <th>nmme0-tmp2m-34w__cancm30</th>\n",
       "      <th>nmme0-tmp2m-34w__cancm40</th>\n",
       "      <th>nmme0-tmp2m-34w__ccsm30</th>\n",
       "      <th>nmme0-tmp2m-34w__ccsm40</th>\n",
       "      <th>nmme0-tmp2m-34w__cfsv20</th>\n",
       "      <th>...</th>\n",
       "      <th>wind-vwnd-925-2010-12</th>\n",
       "      <th>wind-vwnd-925-2010-13</th>\n",
       "      <th>wind-vwnd-925-2010-14</th>\n",
       "      <th>wind-vwnd-925-2010-15</th>\n",
       "      <th>wind-vwnd-925-2010-16</th>\n",
       "      <th>wind-vwnd-925-2010-17</th>\n",
       "      <th>wind-vwnd-925-2010-18</th>\n",
       "      <th>wind-vwnd-925-2010-19</th>\n",
       "      <th>wind-vwnd-925-2010-20</th>\n",
       "      <th>loc_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-01</td>\n",
       "      <td>237.00</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>-37.21</td>\n",
       "      <td>8.32</td>\n",
       "      <td>9.56</td>\n",
       "      <td>-2.03</td>\n",
       "      <td>48.13</td>\n",
       "      <td>28.09</td>\n",
       "      <td>-13.50</td>\n",
       "      <td>11.90</td>\n",
       "      <td>4.58</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-02</td>\n",
       "      <td>228.90</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>-36.57</td>\n",
       "      <td>8.77</td>\n",
       "      <td>21.17</td>\n",
       "      <td>4.44</td>\n",
       "      <td>48.60</td>\n",
       "      <td>27.41</td>\n",
       "      <td>-23.77</td>\n",
       "      <td>15.44</td>\n",
       "      <td>3.42</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-03</td>\n",
       "      <td>220.69</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>-34.16</td>\n",
       "      <td>6.99</td>\n",
       "      <td>32.16</td>\n",
       "      <td>5.01</td>\n",
       "      <td>48.53</td>\n",
       "      <td>19.21</td>\n",
       "      <td>-33.16</td>\n",
       "      <td>15.11</td>\n",
       "      <td>4.82</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-04</td>\n",
       "      <td>225.28</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>-31.04</td>\n",
       "      <td>6.17</td>\n",
       "      <td>39.66</td>\n",
       "      <td>-1.41</td>\n",
       "      <td>50.59</td>\n",
       "      <td>8.29</td>\n",
       "      <td>-37.22</td>\n",
       "      <td>18.24</td>\n",
       "      <td>9.74</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-05</td>\n",
       "      <td>237.24</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>-31.80</td>\n",
       "      <td>7.47</td>\n",
       "      <td>38.62</td>\n",
       "      <td>-5.21</td>\n",
       "      <td>54.73</td>\n",
       "      <td>-2.58</td>\n",
       "      <td>-42.30</td>\n",
       "      <td>21.91</td>\n",
       "      <td>10.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 247 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   index  lat       lon  startdate  contest-pevpr-sfc-gauss-14d__pevpr  \\\n",
       "0      0  0.0  0.833333 2014-09-01                              237.00   \n",
       "1      1  0.0  0.833333 2014-09-02                              228.90   \n",
       "2      2  0.0  0.833333 2014-09-03                              220.69   \n",
       "3      3  0.0  0.833333 2014-09-04                              225.28   \n",
       "4      4  0.0  0.833333 2014-09-05                              237.24   \n",
       "\n",
       "   nmme0-tmp2m-34w__cancm30  nmme0-tmp2m-34w__cancm40  \\\n",
       "0                     29.02                     31.64   \n",
       "1                     29.02                     31.64   \n",
       "2                     29.02                     31.64   \n",
       "3                     29.02                     31.64   \n",
       "4                     29.02                     31.64   \n",
       "\n",
       "   nmme0-tmp2m-34w__ccsm30  nmme0-tmp2m-34w__ccsm40  nmme0-tmp2m-34w__cfsv20  \\\n",
       "0                    29.57                    30.73                    29.71   \n",
       "1                    29.57                    30.73                    29.71   \n",
       "2                    29.57                    30.73                    29.71   \n",
       "3                    29.57                    30.73                    29.71   \n",
       "4                    29.57                    30.73                    29.71   \n",
       "\n",
       "   ...  wind-vwnd-925-2010-12  wind-vwnd-925-2010-13  wind-vwnd-925-2010-14  \\\n",
       "0  ...                 -37.21                   8.32                   9.56   \n",
       "1  ...                 -36.57                   8.77                  21.17   \n",
       "2  ...                 -34.16                   6.99                  32.16   \n",
       "3  ...                 -31.04                   6.17                  39.66   \n",
       "4  ...                 -31.80                   7.47                  38.62   \n",
       "\n",
       "   wind-vwnd-925-2010-15  wind-vwnd-925-2010-16  wind-vwnd-925-2010-17  \\\n",
       "0                  -2.03                  48.13                  28.09   \n",
       "1                   4.44                  48.60                  27.41   \n",
       "2                   5.01                  48.53                  19.21   \n",
       "3                  -1.41                  50.59                   8.29   \n",
       "4                  -5.21                  54.73                  -2.58   \n",
       "\n",
       "   wind-vwnd-925-2010-18  wind-vwnd-925-2010-19  wind-vwnd-925-2010-20  \\\n",
       "0                 -13.50                  11.90                   4.58   \n",
       "1                 -23.77                  15.44                   3.42   \n",
       "2                 -33.16                  15.11                   4.82   \n",
       "3                 -37.22                  18.24                   9.74   \n",
       "4                 -42.30                  21.91                  10.95   \n",
       "\n",
       "   loc_group  \n",
       "0          0  \n",
       "1          0  \n",
       "2          0  \n",
       "3          0  \n",
       "4          0  \n",
       "\n",
       "[5 rows x 247 columns]"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#concate train and test\n",
    "all_data = pd.concat([train_data, test_data])\n",
    "\n",
    "all_data['loc_group']= all_data.groupby(['lat', 'lon']).ngroup()\n",
    "all_data.head(5)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "633092a6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "count    407088.000000\n",
      "mean        300.483731\n",
      "std         164.709762\n",
      "min           0.000000\n",
      "25%         175.000000\n",
      "50%         308.500000\n",
      "75%         441.000000\n",
      "max         574.000000\n",
      "Name: loc_group, dtype: float64\n",
      "575\n"
     ]
    }
   ],
   "source": [
    "print(all_data['loc_group'].describe())\n",
    "print(all_data['loc_group'].nunique())"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "205c50c7",
   "metadata": {},
   "source": [
    "As we can see, the number of unique location in all_data is higher than train set and test set. So there are some value include in the train set which is not include in test set and vice versa"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "7a508554",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 375734 entries, 0 to 375733\n",
      "Columns: 247 entries, index to loc_group\n",
      "dtypes: datetime64[ns](1), float64(243), int64(2), object(1)\n",
      "memory usage: 710.9+ MB\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 31354 entries, 0 to 31353\n",
      "Columns: 247 entries, index to loc_group\n",
      "dtypes: datetime64[ns](1), float64(243), int64(2), object(1)\n",
      "memory usage: 59.3+ MB\n"
     ]
    }
   ],
   "source": [
    "#seperate\n",
    "train_data = all_data.iloc[:len(train_data)]\n",
    "test_data = all_data.iloc[len(train_data):]\n",
    "train_data.info()\n",
    "test_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "4ec928d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Location in train set but not in test set\n",
      "33\n",
      "34\n",
      "35\n",
      "36\n",
      "37\n",
      "38\n",
      "39\n",
      "40\n",
      "41\n",
      "42\n",
      "43\n",
      "44\n",
      "45\n",
      "46\n",
      "47\n",
      "48\n",
      "49\n",
      "50\n",
      "51\n",
      "76\n",
      "101\n",
      "120\n",
      "121\n",
      "122\n",
      "123\n",
      "124\n",
      "125\n",
      "126\n",
      "127\n",
      "128\n",
      "129\n",
      "130\n",
      "131\n",
      "132\n",
      "133\n",
      "134\n",
      "135\n",
      "136\n",
      "137\n",
      "138\n",
      "139\n",
      "140\n",
      "141\n",
      "142\n",
      "143\n",
      "144\n",
      "145\n",
      "181\n",
      "210\n",
      "239\n",
      "269\n",
      "300\n",
      "330\n",
      "360\n",
      "389\n",
      "418\n",
      "447\n",
      "475\n",
      "504\n",
      "533\n",
      "559\n",
      "Location in test set but not in train set\n",
      "52\n",
      "53\n",
      "54\n",
      "55\n",
      "56\n",
      "57\n",
      "58\n",
      "59\n",
      "60\n",
      "61\n",
      "62\n",
      "63\n",
      "64\n",
      "65\n",
      "66\n",
      "67\n",
      "68\n",
      "69\n",
      "70\n",
      "75\n",
      "100\n",
      "146\n",
      "147\n",
      "148\n",
      "149\n",
      "150\n",
      "151\n",
      "152\n",
      "153\n",
      "154\n",
      "155\n",
      "156\n",
      "157\n",
      "158\n",
      "159\n",
      "160\n",
      "161\n",
      "162\n",
      "163\n",
      "164\n",
      "165\n",
      "166\n",
      "167\n",
      "168\n",
      "169\n",
      "170\n",
      "171\n",
      "180\n",
      "209\n",
      "238\n",
      "268\n",
      "299\n",
      "329\n",
      "359\n",
      "388\n",
      "417\n",
      "446\n",
      "474\n",
      "503\n",
      "532\n",
      "558\n"
     ]
    }
   ],
   "source": [
    "print('Location in train set but not in test set')\n",
    "for i in train_data['loc_group'].unique():\n",
    "    if i not in test_data['loc_group'].unique():\n",
    "        print(i)\n",
    "\n",
    "print('Location in test set but not in train set')\n",
    "for i in test_data['loc_group'].unique():\n",
    "    if i not in train_data['loc_group'].unique():\n",
    "        print(i)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "b7fd71aa",
   "metadata": {},
   "source": [
    "This problem was solve\n",
    "https://www.kaggle.com/code/flaviafelicioni/wids-2023-different-locations-train-test-solved"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "308ee56e",
   "metadata": {},
   "outputs": [],
   "source": [
    "scale = 14\n",
    "train_data['lat']= round(train_data.lat, scale)\n",
    "train_data['lon']= round(train_data.lon, scale)\n",
    "\n",
    "test_data['lat']= round(test_data.lat, scale)\n",
    "test_data['lon']= round(test_data.lon, scale)\n",
    "\n",
    "#concate train and test\n",
    "all_data = pd.concat([train_data, test_data])\n",
    "\n",
    "all_data['loc_group']= all_data.groupby(['lat', 'lon']).ngroup()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "a7f4b4d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#all_data.groupby(['lat', 'lon']).nunique()\n",
    "fig, ax = plt.subplots()\n",
    "sns.kdeplot(data=all_data['loc_group'],  color='blue', fill=True, ax=ax)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "bebe3530",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 375734 entries, 0 to 375733\n",
      "Columns: 247 entries, index to loc_group\n",
      "dtypes: datetime64[ns](1), float64(243), int64(2), object(1)\n",
      "memory usage: 710.9+ MB\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 31354 entries, 0 to 31353\n",
      "Columns: 247 entries, index to loc_group\n",
      "dtypes: datetime64[ns](1), float64(243), int64(2), object(1)\n",
      "memory usage: 59.3+ MB\n"
     ]
    }
   ],
   "source": [
    "#seperate\n",
    "train_data = all_data.iloc[:len(train_data)]\n",
    "test_data = all_data.iloc[len(train_data):]\n",
    "train_data.info()\n",
    "test_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "ea95b5d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Location in train set but not in test set\n",
      "Location in test set but not in train set\n"
     ]
    }
   ],
   "source": [
    "#checking if there is any others value\n",
    "print('Location in train set but not in test set')\n",
    "for i in train_data['loc_group'].unique():\n",
    "    if i not in test_data['loc_group'].unique():\n",
    "        print(i)\n",
    "\n",
    "print('Location in test set but not in train set')\n",
    "for i in test_data['loc_group'].unique():\n",
    "    if i not in train_data['loc_group'].unique():\n",
    "        print(i)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "434f8ee5",
   "metadata": {},
   "source": [
    "Misssing value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "933b607c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1152x1152 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cols_with_missing_train=list(train_data.isnull().sum(axis=0)[train_data.isnull().sum(axis=0)>0].index)\n",
    "fig, ax = plt.subplots(1,1, figsize=(16,16))\n",
    "sns.heatmap(train_data.set_index([ 'loc_group', 'startdate'])[cols_with_missing_train].isnull(), cmap='binary')\n",
    "ax.set_title('Missing values')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "9beb1746",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_data_= train_data.sort_values(by = ['loc_group', 'startdate'])\n",
    "train_data_old= train_data\n",
    "train_data_mean= train_data.fillna(train_data.mean())\n",
    "train_data = train_data.ffill()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "83f5f1f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1440x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, 1,figsize=(20,4))\n",
    "sns.pointplot(data=train_data[train_data.loc_group ==0], x='startdate', y=cols_with_missing_train[0], linewidth=1, marker='.', color='orange', label='filled missing data with .ffill()' )\n",
    "sns.pointplot(data=train_data_mean[train_data_mean.loc_group ==0], x='startdate', y=cols_with_missing_train[0], linewidth=1, marker='.', color='pink', label='filled missing data with mean value' )\n",
    "sns.pointplot(data=train_data_old[train_data_old.loc_group ==0], x='startdate', y=cols_with_missing_train[0], linewidth=1, marker='.', color='blue', label='original data' )\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "del train_data_old, train_data_mean"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "be8a904a",
   "metadata": {},
   "source": [
    "Label Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "ff8eb84c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "count    375734.000000\n",
      "mean          4.538911\n",
      "std           3.495338\n",
      "min           0.000000\n",
      "25%           1.000000\n",
      "50%           4.000000\n",
      "75%           8.000000\n",
      "max          14.000000\n",
      "Name: climateregions__climateregion, dtype: float64\n",
      "<class 'pandas.core.series.Series'>\n",
      "Int64Index: 375734 entries, 0 to 375733\n",
      "Series name: climateregions__climateregion\n",
      "Non-Null Count   Dtype\n",
      "--------------   -----\n",
      "375734 non-null  int32\n",
      "dtypes: int32(1)\n",
      "memory usage: 4.3 MB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "le = preprocessing.LabelEncoder()\n",
    "train_data['climateregions__climateregion'] = le.fit_transform(train_data['climateregions__climateregion'])\n",
    "test_data['climateregions__climateregion'] = le.transform(test_data['climateregions__climateregion'])\n",
    "print(train_data['climateregions__climateregion'].describe())\n",
    "print(train_data['climateregions__climateregion'].info())"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "6234fc74",
   "metadata": {},
   "source": [
    "Time Feature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "36c7c065",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>startdate</th>\n",
       "      <th>contest-pevpr-sfc-gauss-14d__pevpr</th>\n",
       "      <th>nmme0-tmp2m-34w__cancm30</th>\n",
       "      <th>nmme0-tmp2m-34w__cancm40</th>\n",
       "      <th>nmme0-tmp2m-34w__ccsm30</th>\n",
       "      <th>nmme0-tmp2m-34w__ccsm40</th>\n",
       "      <th>nmme0-tmp2m-34w__cfsv20</th>\n",
       "      <th>...</th>\n",
       "      <th>wind-vwnd-925-2010-16</th>\n",
       "      <th>wind-vwnd-925-2010-17</th>\n",
       "      <th>wind-vwnd-925-2010-18</th>\n",
       "      <th>wind-vwnd-925-2010-19</th>\n",
       "      <th>wind-vwnd-925-2010-20</th>\n",
       "      <th>loc_group</th>\n",
       "      <th>quarter</th>\n",
       "      <th>month</th>\n",
       "      <th>week</th>\n",
       "      <th>dayofyear</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-01</td>\n",
       "      <td>237.00</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>48.13</td>\n",
       "      <td>28.09</td>\n",
       "      <td>-13.50</td>\n",
       "      <td>11.90</td>\n",
       "      <td>4.58</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>36</td>\n",
       "      <td>244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-02</td>\n",
       "      <td>228.90</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>48.60</td>\n",
       "      <td>27.41</td>\n",
       "      <td>-23.77</td>\n",
       "      <td>15.44</td>\n",
       "      <td>3.42</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>36</td>\n",
       "      <td>245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-03</td>\n",
       "      <td>220.69</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>48.53</td>\n",
       "      <td>19.21</td>\n",
       "      <td>-33.16</td>\n",
       "      <td>15.11</td>\n",
       "      <td>4.82</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>36</td>\n",
       "      <td>246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-04</td>\n",
       "      <td>225.28</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>50.59</td>\n",
       "      <td>8.29</td>\n",
       "      <td>-37.22</td>\n",
       "      <td>18.24</td>\n",
       "      <td>9.74</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>36</td>\n",
       "      <td>247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2014-09-05</td>\n",
       "      <td>237.24</td>\n",
       "      <td>29.02</td>\n",
       "      <td>31.64</td>\n",
       "      <td>29.57</td>\n",
       "      <td>30.73</td>\n",
       "      <td>29.71</td>\n",
       "      <td>...</td>\n",
       "      <td>54.73</td>\n",
       "      <td>-2.58</td>\n",
       "      <td>-42.30</td>\n",
       "      <td>21.91</td>\n",
       "      <td>10.95</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>36</td>\n",
       "      <td>248</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 251 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   index  lat       lon  startdate  contest-pevpr-sfc-gauss-14d__pevpr  \\\n",
       "0      0  0.0  0.833333 2014-09-01                              237.00   \n",
       "1      1  0.0  0.833333 2014-09-02                              228.90   \n",
       "2      2  0.0  0.833333 2014-09-03                              220.69   \n",
       "3      3  0.0  0.833333 2014-09-04                              225.28   \n",
       "4      4  0.0  0.833333 2014-09-05                              237.24   \n",
       "\n",
       "   nmme0-tmp2m-34w__cancm30  nmme0-tmp2m-34w__cancm40  \\\n",
       "0                     29.02                     31.64   \n",
       "1                     29.02                     31.64   \n",
       "2                     29.02                     31.64   \n",
       "3                     29.02                     31.64   \n",
       "4                     29.02                     31.64   \n",
       "\n",
       "   nmme0-tmp2m-34w__ccsm30  nmme0-tmp2m-34w__ccsm40  nmme0-tmp2m-34w__cfsv20  \\\n",
       "0                    29.57                    30.73                    29.71   \n",
       "1                    29.57                    30.73                    29.71   \n",
       "2                    29.57                    30.73                    29.71   \n",
       "3                    29.57                    30.73                    29.71   \n",
       "4                    29.57                    30.73                    29.71   \n",
       "\n",
       "   ...  wind-vwnd-925-2010-16  wind-vwnd-925-2010-17  wind-vwnd-925-2010-18  \\\n",
       "0  ...                  48.13                  28.09                 -13.50   \n",
       "1  ...                  48.60                  27.41                 -23.77   \n",
       "2  ...                  48.53                  19.21                 -33.16   \n",
       "3  ...                  50.59                   8.29                 -37.22   \n",
       "4  ...                  54.73                  -2.58                 -42.30   \n",
       "\n",
       "   wind-vwnd-925-2010-19  wind-vwnd-925-2010-20  loc_group  quarter  month  \\\n",
       "0                  11.90                   4.58          0        3      9   \n",
       "1                  15.44                   3.42          0        3      9   \n",
       "2                  15.11                   4.82          0        3      9   \n",
       "3                  18.24                   9.74          0        3      9   \n",
       "4                  21.91                  10.95          0        3      9   \n",
       "\n",
       "   week  dayofyear  \n",
       "0    36        244  \n",
       "1    36        245  \n",
       "2    36        246  \n",
       "3    36        247  \n",
       "4    36        248  \n",
       "\n",
       "[5 rows x 251 columns]"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def create_time_features(df):\n",
    "    df = df.copy()\n",
    "    #df['year'] = df.startdate.dt.year\n",
    "    df['quarter'] = df.startdate.dt.quarter\n",
    "    df['month'] = df.startdate.dt.month\n",
    "    df['week'] = df.startdate.dt.weekofyear\n",
    "    df['dayofyear'] = df.startdate.dt.day_of_year\n",
    "    return df\n",
    "\n",
    "train_data = create_time_features(train_data)\n",
    "test_data = create_time_features(test_data)\n",
    "train_data.head()"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "57027387",
   "metadata": {},
   "source": [
    "Distribution of Target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "9d9064f3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Frequency of target'),\n",
       " Text(0.5, 0, 'contest-tmp2m-14d__tmp2m'),\n",
       " Text(0, 0.5, 'Frequency')]"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(train_data[target],alpha=0.5, bins =30, color='g')\n",
    "plt.gca().set(title='Frequency of target',xlabel=target, ylabel='Frequency')"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "62293079",
   "metadata": {},
   "source": [
    "Q-Q plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "9a0c9ca1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "stat.probplot(train_data[target], dist=\"norm\", plot=pylab)\n",
    "pylab.show()\n"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "e02339cd",
   "metadata": {},
   "source": [
    "Normalize time data to build model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "54c3c9e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Copied from https://colab.research.google.com/drive/10r73mOp1R7cORfeuP97V65a-rgwGyfWr?usp=sharing#scrollTo=c9ZkVb2aU-S7\n",
    "\n",
    "def sin_transformer(period):\n",
    "    return FunctionTransformer(lambda x: np.sin(x / period * 2 * np.pi))\n",
    "\n",
    "\n",
    "def cos_transformer(period):\n",
    "    return FunctionTransformer(lambda x: np.cos(x / period * 2 * np.pi))\n",
    "\n",
    "def encode_cyclical(df):\n",
    "    # encode the day with a period of 365\n",
    "    df['day_of_year_sin'] = sin_transformer(365).fit_transform(df['dayofyear'])\n",
    "    df['day_of_year_cos'] = cos_transformer(365).fit_transform(df['dayofyear'])\n",
    "\n",
    "    # encode the week with a period of 52\n",
    "    df['week_sin'] = sin_transformer(52).fit_transform(df['week'])\n",
    "    df['week_cos'] = cos_transformer(52).fit_transform(df['week'])\n",
    "\n",
    "    # encode the month with a period of 12\n",
    "    df['month_sin'] = sin_transformer(12).fit_transform(df['month'])\n",
    "    df['month_cos'] = cos_transformer(12).fit_transform(df['month'])\n",
    "    \n",
    "    # encode the quarter with a period of 4\n",
    "    df['quarter_sin'] = sin_transformer(4).fit_transform(df['quarter'])\n",
    "    df['quarter_cos'] = cos_transformer(4).fit_transform(df['quarter'])\n",
    "\n",
    "encode_cyclical(train_data)\n",
    "encode_cyclical(test_data)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "f55c874d",
   "metadata": {},
   "source": [
    "Build model using Random Forest model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "d8358fa4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th>startdate</th>\n",
       "      <th>contest-pevpr-sfc-gauss-14d__pevpr</th>\n",
       "      <th>nmme0-tmp2m-34w__cancm30</th>\n",
       "      <th>nmme0-tmp2m-34w__cancm40</th>\n",
       "      <th>nmme0-tmp2m-34w__ccsm30</th>\n",
       "      <th>nmme0-tmp2m-34w__ccsm40</th>\n",
       "      <th>nmme0-tmp2m-34w__cfsv20</th>\n",
       "      <th>...</th>\n",
       "      <th>week</th>\n",
       "      <th>dayofyear</th>\n",
       "      <th>day_of_year_sin</th>\n",
       "      <th>day_of_year_cos</th>\n",
       "      <th>week_sin</th>\n",
       "      <th>week_cos</th>\n",
       "      <th>month_sin</th>\n",
       "      <th>month_cos</th>\n",
       "      <th>quarter_sin</th>\n",
       "      <th>quarter_cos</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>375734</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2022-11-01</td>\n",
       "      <td>339.88</td>\n",
       "      <td>30.88</td>\n",
       "      <td>30.92</td>\n",
       "      <td>29.17</td>\n",
       "      <td>31.02</td>\n",
       "      <td>29.47</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>305</td>\n",
       "      <td>-8.587640e-01</td>\n",
       "      <td>0.512371</td>\n",
       "      <td>-8.229839e-01</td>\n",
       "      <td>0.568065</td>\n",
       "      <td>-5.000000e-01</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>375735</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2022-11-02</td>\n",
       "      <td>334.63</td>\n",
       "      <td>30.88</td>\n",
       "      <td>30.92</td>\n",
       "      <td>29.17</td>\n",
       "      <td>31.02</td>\n",
       "      <td>29.47</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>306</td>\n",
       "      <td>-8.498171e-01</td>\n",
       "      <td>0.527078</td>\n",
       "      <td>-8.229839e-01</td>\n",
       "      <td>0.568065</td>\n",
       "      <td>-5.000000e-01</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>375736</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2022-11-03</td>\n",
       "      <td>337.83</td>\n",
       "      <td>30.88</td>\n",
       "      <td>30.92</td>\n",
       "      <td>29.17</td>\n",
       "      <td>31.02</td>\n",
       "      <td>29.47</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>307</td>\n",
       "      <td>-8.406184e-01</td>\n",
       "      <td>0.541628</td>\n",
       "      <td>-8.229839e-01</td>\n",
       "      <td>0.568065</td>\n",
       "      <td>-5.000000e-01</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>375737</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2022-11-04</td>\n",
       "      <td>345.81</td>\n",
       "      <td>30.88</td>\n",
       "      <td>30.92</td>\n",
       "      <td>29.17</td>\n",
       "      <td>31.02</td>\n",
       "      <td>29.47</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>308</td>\n",
       "      <td>-8.311706e-01</td>\n",
       "      <td>0.556017</td>\n",
       "      <td>-8.229839e-01</td>\n",
       "      <td>0.568065</td>\n",
       "      <td>-5.000000e-01</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>375738</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.833333</td>\n",
       "      <td>2022-11-05</td>\n",
       "      <td>357.39</td>\n",
       "      <td>30.88</td>\n",
       "      <td>30.92</td>\n",
       "      <td>29.17</td>\n",
       "      <td>31.02</td>\n",
       "      <td>29.47</td>\n",
       "      <td>...</td>\n",
       "      <td>44</td>\n",
       "      <td>309</td>\n",
       "      <td>-8.214766e-01</td>\n",
       "      <td>0.570242</td>\n",
       "      <td>-8.229839e-01</td>\n",
       "      <td>0.568065</td>\n",
       "      <td>-5.000000e-01</td>\n",
       "      <td>0.866025</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31349</th>\n",
       "      <td>407083</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.866667</td>\n",
       "      <td>2022-12-27</td>\n",
       "      <td>62.72</td>\n",
       "      <td>4.60</td>\n",
       "      <td>8.71</td>\n",
       "      <td>6.05</td>\n",
       "      <td>10.08</td>\n",
       "      <td>6.39</td>\n",
       "      <td>...</td>\n",
       "      <td>52</td>\n",
       "      <td>361</td>\n",
       "      <td>-6.880243e-02</td>\n",
       "      <td>0.997630</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31350</th>\n",
       "      <td>407084</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.866667</td>\n",
       "      <td>2022-12-28</td>\n",
       "      <td>73.41</td>\n",
       "      <td>4.60</td>\n",
       "      <td>8.71</td>\n",
       "      <td>6.05</td>\n",
       "      <td>10.08</td>\n",
       "      <td>6.39</td>\n",
       "      <td>...</td>\n",
       "      <td>52</td>\n",
       "      <td>362</td>\n",
       "      <td>-5.161967e-02</td>\n",
       "      <td>0.998667</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31351</th>\n",
       "      <td>407085</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.866667</td>\n",
       "      <td>2022-12-29</td>\n",
       "      <td>70.00</td>\n",
       "      <td>4.60</td>\n",
       "      <td>8.71</td>\n",
       "      <td>6.05</td>\n",
       "      <td>10.08</td>\n",
       "      <td>6.39</td>\n",
       "      <td>...</td>\n",
       "      <td>52</td>\n",
       "      <td>363</td>\n",
       "      <td>-3.442161e-02</td>\n",
       "      <td>0.999407</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31352</th>\n",
       "      <td>407086</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.866667</td>\n",
       "      <td>2022-12-30</td>\n",
       "      <td>79.81</td>\n",
       "      <td>4.60</td>\n",
       "      <td>8.71</td>\n",
       "      <td>6.05</td>\n",
       "      <td>10.08</td>\n",
       "      <td>6.39</td>\n",
       "      <td>...</td>\n",
       "      <td>52</td>\n",
       "      <td>364</td>\n",
       "      <td>-1.721336e-02</td>\n",
       "      <td>0.999852</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31353</th>\n",
       "      <td>407087</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.866667</td>\n",
       "      <td>2022-12-31</td>\n",
       "      <td>86.17</td>\n",
       "      <td>4.60</td>\n",
       "      <td>8.71</td>\n",
       "      <td>6.05</td>\n",
       "      <td>10.08</td>\n",
       "      <td>6.39</td>\n",
       "      <td>...</td>\n",
       "      <td>52</td>\n",
       "      <td>365</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-2.449294e-16</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>31354 rows × 259 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        index  lat       lon  startdate  contest-pevpr-sfc-gauss-14d__pevpr  \\\n",
       "0      375734  0.0  0.833333 2022-11-01                              339.88   \n",
       "1      375735  0.0  0.833333 2022-11-02                              334.63   \n",
       "2      375736  0.0  0.833333 2022-11-03                              337.83   \n",
       "3      375737  0.0  0.833333 2022-11-04                              345.81   \n",
       "4      375738  0.0  0.833333 2022-11-05                              357.39   \n",
       "...       ...  ...       ...        ...                                 ...   \n",
       "31349  407083  1.0  0.866667 2022-12-27                               62.72   \n",
       "31350  407084  1.0  0.866667 2022-12-28                               73.41   \n",
       "31351  407085  1.0  0.866667 2022-12-29                               70.00   \n",
       "31352  407086  1.0  0.866667 2022-12-30                               79.81   \n",
       "31353  407087  1.0  0.866667 2022-12-31                               86.17   \n",
       "\n",
       "       nmme0-tmp2m-34w__cancm30  nmme0-tmp2m-34w__cancm40  \\\n",
       "0                         30.88                     30.92   \n",
       "1                         30.88                     30.92   \n",
       "2                         30.88                     30.92   \n",
       "3                         30.88                     30.92   \n",
       "4                         30.88                     30.92   \n",
       "...                         ...                       ...   \n",
       "31349                      4.60                      8.71   \n",
       "31350                      4.60                      8.71   \n",
       "31351                      4.60                      8.71   \n",
       "31352                      4.60                      8.71   \n",
       "31353                      4.60                      8.71   \n",
       "\n",
       "       nmme0-tmp2m-34w__ccsm30  nmme0-tmp2m-34w__ccsm40  \\\n",
       "0                        29.17                    31.02   \n",
       "1                        29.17                    31.02   \n",
       "2                        29.17                    31.02   \n",
       "3                        29.17                    31.02   \n",
       "4                        29.17                    31.02   \n",
       "...                        ...                      ...   \n",
       "31349                     6.05                    10.08   \n",
       "31350                     6.05                    10.08   \n",
       "31351                     6.05                    10.08   \n",
       "31352                     6.05                    10.08   \n",
       "31353                     6.05                    10.08   \n",
       "\n",
       "       nmme0-tmp2m-34w__cfsv20  ...  week  dayofyear  day_of_year_sin  \\\n",
       "0                        29.47  ...    44        305    -8.587640e-01   \n",
       "1                        29.47  ...    44        306    -8.498171e-01   \n",
       "2                        29.47  ...    44        307    -8.406184e-01   \n",
       "3                        29.47  ...    44        308    -8.311706e-01   \n",
       "4                        29.47  ...    44        309    -8.214766e-01   \n",
       "...                        ...  ...   ...        ...              ...   \n",
       "31349                     6.39  ...    52        361    -6.880243e-02   \n",
       "31350                     6.39  ...    52        362    -5.161967e-02   \n",
       "31351                     6.39  ...    52        363    -3.442161e-02   \n",
       "31352                     6.39  ...    52        364    -1.721336e-02   \n",
       "31353                     6.39  ...    52        365    -2.449294e-16   \n",
       "\n",
       "       day_of_year_cos      week_sin  week_cos     month_sin  month_cos  \\\n",
       "0             0.512371 -8.229839e-01  0.568065 -5.000000e-01   0.866025   \n",
       "1             0.527078 -8.229839e-01  0.568065 -5.000000e-01   0.866025   \n",
       "2             0.541628 -8.229839e-01  0.568065 -5.000000e-01   0.866025   \n",
       "3             0.556017 -8.229839e-01  0.568065 -5.000000e-01   0.866025   \n",
       "4             0.570242 -8.229839e-01  0.568065 -5.000000e-01   0.866025   \n",
       "...                ...           ...       ...           ...        ...   \n",
       "31349         0.997630 -2.449294e-16  1.000000 -2.449294e-16   1.000000   \n",
       "31350         0.998667 -2.449294e-16  1.000000 -2.449294e-16   1.000000   \n",
       "31351         0.999407 -2.449294e-16  1.000000 -2.449294e-16   1.000000   \n",
       "31352         0.999852 -2.449294e-16  1.000000 -2.449294e-16   1.000000   \n",
       "31353         1.000000 -2.449294e-16  1.000000 -2.449294e-16   1.000000   \n",
       "\n",
       "        quarter_sin  quarter_cos  \n",
       "0     -2.449294e-16          1.0  \n",
       "1     -2.449294e-16          1.0  \n",
       "2     -2.449294e-16          1.0  \n",
       "3     -2.449294e-16          1.0  \n",
       "4     -2.449294e-16          1.0  \n",
       "...             ...          ...  \n",
       "31349 -2.449294e-16          1.0  \n",
       "31350 -2.449294e-16          1.0  \n",
       "31351 -2.449294e-16          1.0  \n",
       "31352 -2.449294e-16          1.0  \n",
       "31353 -2.449294e-16          1.0  \n",
       "\n",
       "[31354 rows x 259 columns]"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#train_data.drop(columns=['loc_group'], inplace=True)\n",
    "train_data.sort_values(by=['index'])\n",
    "test_data.sort_values(by=['index'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "dacca5c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=train_data.drop([target,'startdate', 'index','loc_group'], axis=1)\n",
    "y=train_data[target]\n",
    "\n",
    "x_test=test_data.drop([target,'startdate', 'index','loc_group'], axis=1)\n",
    "sample_solution=pd.read_csv('D:/portfolio project 25-1/widsdatathon2023/Data/sample_solution.csv')\n",
    "y_test=sample_solution[target]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "b682d748",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Identify correlated features to drop that fall above a correlation threshold \n",
    "## https://goodboychan.github.io/python/datacamp/machine_learning/2020/07/08/02-Feature-selection-I-selecting-for-feature-information.html \n",
    "\n",
    "def identify_correlated(df, threshold):\n",
    "    corr_matrix = df.corr().abs()\n",
    "    mask = np.triu(np.ones_like(corr_matrix, dtype=bool))\n",
    "    reduced_corr_matrix = corr_matrix.mask(mask)\n",
    "    features_to_drop = [c for c in reduced_corr_matrix.columns if any(reduced_corr_matrix[c] > threshold)]\n",
    "    return features_to_drop"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "2d809a7c",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Get the column names to drop \n",
    "to_drop = identify_correlated(x, threshold=.96)\n",
    "x_reduced = pd.DataFrame(x.drop(to_drop, axis=1))\n",
    "x_test_reduced = pd.DataFrame(x_test.drop(to_drop, axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "34afb560",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "x_reduced = scaler.fit_transform(x_reduced)\n",
    "x_test_reduced = scaler.fit_transform(x_test_reduced)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "fceedb54",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train_shape: (251741, 199)    |   Val_shape: (123993, 199)    |   Test_shape: (31354, 199)\n"
     ]
    }
   ],
   "source": [
    "#divide the test set and evaluation set\n",
    "x_train_reduced, x_val_reduced, y_train, y_val = train_test_split(x_reduced, y, test_size=0.33, random_state=42)\n",
    "print(f'Train_shape: {x_train_reduced.shape}    |   Val_shape: {x_val_reduced.shape}    |   Test_shape: {x_test_reduced.shape}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "c437186d",
   "metadata": {},
   "outputs": [],
   "source": [
    "def rmse(actual, predicted):\n",
    "    return mean_squared_error(actual, predicted, squared=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "0c1f733b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the hyperparameter grids for each model\n",
    "XGBRegressor_params = {'base_score': 0.5, \n",
    "          'booster': 'gbtree',\n",
    "          'tree_method': 'hist',  \n",
    "          'n_estimators': 15000,\n",
    "          'objective': 'reg:squarederror',\n",
    "          'max_depth':  5,\n",
    "          'subsample': 0.5,\n",
    "          'colsample_bytree': 0.,\n",
    "          'gamma': 1.4,\n",
    "          'min_child_weight': 7,\n",
    "          'learning_rate': 0.1,\n",
    "}\n",
    "CatBoostRegressor_params = {'iterations': 15000,\n",
    "          'learning_rate': 0.1,\n",
    "          'depth':  5,\n",
    "          'l2_leaf_reg': 3,\n",
    "          'bagging_temperature': 1,\n",
    "          'border_count': 256,\n",
    "          'loss_function': 'RMSE',\n",
    "          'random_seed': None,\n",
    "          'verbose': 100\n",
    "}\n",
    "lgb.LGBMRegressor_params = {'boosting_type': 'gbdt',\n",
    "    'objective': 'regression',\n",
    "    'metric': 'rmse',\n",
    "    'num_leaves': 31,\n",
    "    'max_depth': 5,\n",
    "    'learning_rate': 0.1,\n",
    "    'feature_fraction': 0.9,\n",
    "    'bagging_fraction': 0.8,\n",
    "    'bagging_freq': 5,\n",
    "    'min_child_samples': 50,\n",
    "    'min_data_in_leaf': 100,\n",
    "    'subsample_for_bin': 200000,\n",
    "    'n_estimators': 5000\n",
    "}\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "ad175188",
   "metadata": {},
   "outputs": [],
   "source": [
    "models=[xgb.XGBRegressor(**XGBRegressor_params), \n",
    "        CatBoostRegressor(**CatBoostRegressor_params),\n",
    "        lgb.LGBMRegressor(**lgb.LGBMRegressor_params)\n",
    "]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "c69e2c63",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training model 1/3...\n",
      "Model XGBRegressor:1.160403596988736\n",
      "Training model 2/3...\n",
      "0:\tlearn: 9.0191336\ttotal: 128ms\tremaining: 32m 4s\n",
      "100:\tlearn: 1.3993113\ttotal: 11.9s\tremaining: 29m 18s\n",
      "200:\tlearn: 1.1508829\ttotal: 24.2s\tremaining: 29m 39s\n",
      "300:\tlearn: 1.0017770\ttotal: 36.1s\tremaining: 29m 23s\n",
      "400:\tlearn: 0.9062999\ttotal: 47.1s\tremaining: 28m 33s\n",
      "500:\tlearn: 0.8368003\ttotal: 58.5s\tremaining: 28m 12s\n",
      "600:\tlearn: 0.7833793\ttotal: 1m 9s\tremaining: 27m 48s\n",
      "700:\tlearn: 0.7376154\ttotal: 1m 21s\tremaining: 27m 32s\n",
      "800:\tlearn: 0.7020272\ttotal: 1m 32s\tremaining: 27m 22s\n",
      "900:\tlearn: 0.6718666\ttotal: 1m 44s\tremaining: 27m 16s\n",
      "1000:\tlearn: 0.6455184\ttotal: 1m 55s\tremaining: 26m 58s\n",
      "1100:\tlearn: 0.6231894\ttotal: 2m 7s\tremaining: 26m 43s\n",
      "1200:\tlearn: 0.6022059\ttotal: 2m 18s\tremaining: 26m 29s\n",
      "1300:\tlearn: 0.5836609\ttotal: 2m 29s\tremaining: 26m 18s\n",
      "1400:\tlearn: 0.5678083\ttotal: 2m 41s\tremaining: 26m 11s\n",
      "1500:\tlearn: 0.5532452\ttotal: 2m 53s\tremaining: 25m 57s\n",
      "1600:\tlearn: 0.5389258\ttotal: 3m 4s\tremaining: 25m 45s\n",
      "1700:\tlearn: 0.5255827\ttotal: 3m 15s\tremaining: 25m 30s\n",
      "1800:\tlearn: 0.5134918\ttotal: 3m 27s\tremaining: 25m 17s\n",
      "1900:\tlearn: 0.5015948\ttotal: 3m 38s\tremaining: 25m 6s\n",
      "2000:\tlearn: 0.4913954\ttotal: 3m 49s\tremaining: 24m 52s\n",
      "2100:\tlearn: 0.4817719\ttotal: 4m 1s\tremaining: 24m 40s\n",
      "2200:\tlearn: 0.4724909\ttotal: 4m 12s\tremaining: 24m 26s\n",
      "2300:\tlearn: 0.4639629\ttotal: 4m 23s\tremaining: 24m 13s\n",
      "2400:\tlearn: 0.4555244\ttotal: 4m 34s\tremaining: 23m 59s\n",
      "2500:\tlearn: 0.4479182\ttotal: 4m 45s\tremaining: 23m 46s\n",
      "2600:\tlearn: 0.4402642\ttotal: 4m 56s\tremaining: 23m 34s\n",
      "2700:\tlearn: 0.4327048\ttotal: 5m 8s\tremaining: 23m 23s\n",
      "2800:\tlearn: 0.4257298\ttotal: 5m 19s\tremaining: 23m 11s\n",
      "2900:\tlearn: 0.4191980\ttotal: 5m 30s\tremaining: 22m 58s\n",
      "3000:\tlearn: 0.4126218\ttotal: 5m 41s\tremaining: 22m 45s\n",
      "3100:\tlearn: 0.4068001\ttotal: 5m 53s\tremaining: 22m 34s\n",
      "3200:\tlearn: 0.4012332\ttotal: 6m 4s\tremaining: 22m 23s\n",
      "3300:\tlearn: 0.3957100\ttotal: 6m 15s\tremaining: 22m 11s\n",
      "3400:\tlearn: 0.3906327\ttotal: 6m 28s\tremaining: 22m 5s\n",
      "3500:\tlearn: 0.3852347\ttotal: 6m 45s\tremaining: 22m 10s\n",
      "3600:\tlearn: 0.3802725\ttotal: 7m 3s\tremaining: 22m 22s\n",
      "3700:\tlearn: 0.3750560\ttotal: 7m 21s\tremaining: 22m 28s\n",
      "3800:\tlearn: 0.3703597\ttotal: 7m 35s\tremaining: 22m 22s\n",
      "3900:\tlearn: 0.3658110\ttotal: 7m 49s\tremaining: 22m 16s\n",
      "4000:\tlearn: 0.3616648\ttotal: 8m 3s\tremaining: 22m 9s\n",
      "4100:\tlearn: 0.3573857\ttotal: 8m 19s\tremaining: 22m 7s\n",
      "4200:\tlearn: 0.3534200\ttotal: 8m 35s\tremaining: 22m 4s\n",
      "4300:\tlearn: 0.3493242\ttotal: 8m 50s\tremaining: 22m\n",
      "4400:\tlearn: 0.3455052\ttotal: 9m 6s\tremaining: 21m 55s\n",
      "4500:\tlearn: 0.3417805\ttotal: 9m 21s\tremaining: 21m 49s\n",
      "4600:\tlearn: 0.3383816\ttotal: 9m 35s\tremaining: 21m 40s\n",
      "4700:\tlearn: 0.3349080\ttotal: 9m 50s\tremaining: 21m 32s\n",
      "4800:\tlearn: 0.3316526\ttotal: 10m 4s\tremaining: 21m 24s\n",
      "4900:\tlearn: 0.3282043\ttotal: 10m 19s\tremaining: 21m 15s\n",
      "5000:\tlearn: 0.3249990\ttotal: 10m 33s\tremaining: 21m 6s\n",
      "5100:\tlearn: 0.3217587\ttotal: 10m 48s\tremaining: 20m 57s\n",
      "5200:\tlearn: 0.3186826\ttotal: 11m 2s\tremaining: 20m 47s\n",
      "5300:\tlearn: 0.3158031\ttotal: 11m 16s\tremaining: 20m 36s\n",
      "5400:\tlearn: 0.3129338\ttotal: 11m 30s\tremaining: 20m 26s\n",
      "5500:\tlearn: 0.3100719\ttotal: 11m 44s\tremaining: 20m 17s\n",
      "5600:\tlearn: 0.3074324\ttotal: 11m 59s\tremaining: 20m 7s\n",
      "5700:\tlearn: 0.3047828\ttotal: 12m 14s\tremaining: 19m 57s\n",
      "5800:\tlearn: 0.3022082\ttotal: 12m 29s\tremaining: 19m 49s\n",
      "5900:\tlearn: 0.2995928\ttotal: 12m 45s\tremaining: 19m 40s\n",
      "6000:\tlearn: 0.2971456\ttotal: 12m 59s\tremaining: 19m 29s\n",
      "6100:\tlearn: 0.2947200\ttotal: 13m 14s\tremaining: 19m 18s\n",
      "6200:\tlearn: 0.2921833\ttotal: 13m 29s\tremaining: 19m 8s\n",
      "6300:\tlearn: 0.2898280\ttotal: 13m 43s\tremaining: 18m 57s\n",
      "6400:\tlearn: 0.2875222\ttotal: 13m 58s\tremaining: 18m 46s\n",
      "6500:\tlearn: 0.2852415\ttotal: 14m 12s\tremaining: 18m 34s\n",
      "6600:\tlearn: 0.2831127\ttotal: 14m 26s\tremaining: 18m 22s\n",
      "6700:\tlearn: 0.2808796\ttotal: 14m 41s\tremaining: 18m 11s\n",
      "6800:\tlearn: 0.2786171\ttotal: 14m 57s\tremaining: 18m 1s\n",
      "6900:\tlearn: 0.2765958\ttotal: 15m 10s\tremaining: 17m 48s\n",
      "7000:\tlearn: 0.2743740\ttotal: 15m 24s\tremaining: 17m 36s\n",
      "7100:\tlearn: 0.2723393\ttotal: 15m 37s\tremaining: 17m 23s\n",
      "7200:\tlearn: 0.2703898\ttotal: 15m 53s\tremaining: 17m 12s\n",
      "7300:\tlearn: 0.2684348\ttotal: 16m 8s\tremaining: 17m 1s\n",
      "7400:\tlearn: 0.2665481\ttotal: 16m 23s\tremaining: 16m 49s\n",
      "7500:\tlearn: 0.2647028\ttotal: 16m 37s\tremaining: 16m 37s\n",
      "7600:\tlearn: 0.2628592\ttotal: 16m 54s\tremaining: 16m 27s\n",
      "7700:\tlearn: 0.2610101\ttotal: 17m 9s\tremaining: 16m 16s\n",
      "7800:\tlearn: 0.2591856\ttotal: 17m 25s\tremaining: 16m 4s\n",
      "7900:\tlearn: 0.2573732\ttotal: 17m 41s\tremaining: 15m 53s\n",
      "8000:\tlearn: 0.2557817\ttotal: 17m 58s\tremaining: 15m 43s\n",
      "8100:\tlearn: 0.2540490\ttotal: 18m 13s\tremaining: 15m 31s\n",
      "8200:\tlearn: 0.2523878\ttotal: 18m 27s\tremaining: 15m 18s\n",
      "8300:\tlearn: 0.2508106\ttotal: 18m 42s\tremaining: 15m 5s\n",
      "8400:\tlearn: 0.2491529\ttotal: 18m 56s\tremaining: 14m 52s\n",
      "8500:\tlearn: 0.2476186\ttotal: 19m 10s\tremaining: 14m 39s\n",
      "8600:\tlearn: 0.2460223\ttotal: 19m 23s\tremaining: 14m 25s\n",
      "8700:\tlearn: 0.2445026\ttotal: 19m 36s\tremaining: 14m 12s\n",
      "8800:\tlearn: 0.2429761\ttotal: 19m 50s\tremaining: 13m 58s\n",
      "8900:\tlearn: 0.2414298\ttotal: 20m 3s\tremaining: 13m 44s\n",
      "9000:\tlearn: 0.2399739\ttotal: 20m 16s\tremaining: 13m 30s\n",
      "9100:\tlearn: 0.2385281\ttotal: 20m 30s\tremaining: 13m 17s\n",
      "9200:\tlearn: 0.2371131\ttotal: 20m 43s\tremaining: 13m 3s\n",
      "9300:\tlearn: 0.2357054\ttotal: 20m 56s\tremaining: 12m 49s\n",
      "9400:\tlearn: 0.2344098\ttotal: 21m 11s\tremaining: 12m 37s\n",
      "9500:\tlearn: 0.2331120\ttotal: 21m 24s\tremaining: 12m 23s\n",
      "9600:\tlearn: 0.2317780\ttotal: 21m 37s\tremaining: 12m 9s\n",
      "9700:\tlearn: 0.2305113\ttotal: 21m 49s\tremaining: 11m 55s\n",
      "9800:\tlearn: 0.2291839\ttotal: 22m 2s\tremaining: 11m 41s\n",
      "9900:\tlearn: 0.2279035\ttotal: 22m 14s\tremaining: 11m 27s\n",
      "10000:\tlearn: 0.2266669\ttotal: 22m 26s\tremaining: 11m 12s\n",
      "10100:\tlearn: 0.2254261\ttotal: 22m 37s\tremaining: 10m 58s\n",
      "10200:\tlearn: 0.2241890\ttotal: 22m 49s\tremaining: 10m 44s\n",
      "10300:\tlearn: 0.2229844\ttotal: 23m 2s\tremaining: 10m 30s\n",
      "10400:\tlearn: 0.2217796\ttotal: 23m 14s\tremaining: 10m 16s\n",
      "10500:\tlearn: 0.2206036\ttotal: 23m 26s\tremaining: 10m 2s\n",
      "10600:\tlearn: 0.2193919\ttotal: 23m 38s\tremaining: 9m 48s\n",
      "10700:\tlearn: 0.2182639\ttotal: 23m 51s\tremaining: 9m 35s\n",
      "10800:\tlearn: 0.2170813\ttotal: 24m 5s\tremaining: 9m 22s\n",
      "10900:\tlearn: 0.2159607\ttotal: 24m 17s\tremaining: 9m 8s\n",
      "11000:\tlearn: 0.2148638\ttotal: 24m 29s\tremaining: 8m 54s\n",
      "11100:\tlearn: 0.2137296\ttotal: 24m 42s\tremaining: 8m 40s\n",
      "11200:\tlearn: 0.2127055\ttotal: 24m 54s\tremaining: 8m 26s\n",
      "11300:\tlearn: 0.2116644\ttotal: 25m 6s\tremaining: 8m 12s\n",
      "11400:\tlearn: 0.2106174\ttotal: 25m 18s\tremaining: 7m 59s\n",
      "11500:\tlearn: 0.2095842\ttotal: 25m 30s\tremaining: 7m 45s\n",
      "11600:\tlearn: 0.2085890\ttotal: 25m 42s\tremaining: 7m 32s\n",
      "11700:\tlearn: 0.2076074\ttotal: 25m 55s\tremaining: 7m 18s\n",
      "11800:\tlearn: 0.2066076\ttotal: 26m 7s\tremaining: 7m 4s\n",
      "11900:\tlearn: 0.2056200\ttotal: 26m 19s\tremaining: 6m 51s\n",
      "12000:\tlearn: 0.2046467\ttotal: 26m 30s\tremaining: 6m 37s\n",
      "12100:\tlearn: 0.2036558\ttotal: 26m 43s\tremaining: 6m 24s\n",
      "12200:\tlearn: 0.2026567\ttotal: 26m 56s\tremaining: 6m 10s\n",
      "12300:\tlearn: 0.2016184\ttotal: 27m 9s\tremaining: 5m 57s\n",
      "12400:\tlearn: 0.2006499\ttotal: 27m 21s\tremaining: 5m 44s\n",
      "12500:\tlearn: 0.1996967\ttotal: 27m 33s\tremaining: 5m 30s\n",
      "12600:\tlearn: 0.1987903\ttotal: 27m 45s\tremaining: 5m 16s\n",
      "12700:\tlearn: 0.1979571\ttotal: 27m 56s\tremaining: 5m 3s\n",
      "12800:\tlearn: 0.1970642\ttotal: 28m 9s\tremaining: 4m 50s\n",
      "12900:\tlearn: 0.1961601\ttotal: 28m 21s\tremaining: 4m 36s\n",
      "13000:\tlearn: 0.1952845\ttotal: 28m 33s\tremaining: 4m 23s\n",
      "13100:\tlearn: 0.1944409\ttotal: 28m 45s\tremaining: 4m 10s\n",
      "13200:\tlearn: 0.1935768\ttotal: 28m 57s\tremaining: 3m 56s\n",
      "13300:\tlearn: 0.1927090\ttotal: 29m 8s\tremaining: 3m 43s\n",
      "13400:\tlearn: 0.1918658\ttotal: 29m 19s\tremaining: 3m 29s\n",
      "13500:\tlearn: 0.1909937\ttotal: 29m 31s\tremaining: 3m 16s\n",
      "13600:\tlearn: 0.1901905\ttotal: 29m 42s\tremaining: 3m 3s\n",
      "13700:\tlearn: 0.1893442\ttotal: 29m 53s\tremaining: 2m 50s\n",
      "13800:\tlearn: 0.1885630\ttotal: 30m 4s\tremaining: 2m 36s\n",
      "13900:\tlearn: 0.1877632\ttotal: 30m 15s\tremaining: 2m 23s\n",
      "14000:\tlearn: 0.1869812\ttotal: 30m 27s\tremaining: 2m 10s\n",
      "14100:\tlearn: 0.1861975\ttotal: 30m 38s\tremaining: 1m 57s\n",
      "14200:\tlearn: 0.1854221\ttotal: 30m 49s\tremaining: 1m 44s\n",
      "14300:\tlearn: 0.1846926\ttotal: 31m\tremaining: 1m 30s\n",
      "14400:\tlearn: 0.1839568\ttotal: 31m 11s\tremaining: 1m 17s\n",
      "14500:\tlearn: 0.1832367\ttotal: 31m 22s\tremaining: 1m 4s\n",
      "14600:\tlearn: 0.1825288\ttotal: 31m 33s\tremaining: 51.7s\n",
      "14700:\tlearn: 0.1818436\ttotal: 31m 44s\tremaining: 38.7s\n",
      "14800:\tlearn: 0.1811109\ttotal: 31m 55s\tremaining: 25.8s\n",
      "14900:\tlearn: 0.1803755\ttotal: 32m 6s\tremaining: 12.8s\n",
      "14999:\tlearn: 0.1796894\ttotal: 32m 17s\tremaining: 0us\n",
      "Model CatBoostRegressor:0.22966552682113672\n",
      "Training model 3/3...\n",
      "[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9\n",
      "[LightGBM] [Warning] min_data_in_leaf is set=100, min_child_samples=50 will be ignored. Current value: min_data_in_leaf=100\n",
      "[LightGBM] [Warning] bagging_fraction is set=0.8, subsample=1.0 will be ignored. Current value: bagging_fraction=0.8\n",
      "[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n",
      "Model LGBMRegressor:0.28839359820679705\n"
     ]
    }
   ],
   "source": [
    "# create a list of model names\n",
    "model_names = ['XGBRegressor', 'CatBoostRegressor', 'LGBMRegressor']\n",
    "rmse_list = []\n",
    "for i, model in enumerate(models):\n",
    "    print(f'Training model {i+1}/{len(models)}...')\n",
    "    # Fit the model on the training set\n",
    "    model.fit(x_train_reduced, y_train)\n",
    "    # Make predictions on the val set\n",
    "    y_val_pre = model.predict(x_val_reduced)\n",
    "    # Calculate the RMSE of the predictions\n",
    "    score = rmse(y_val, y_val_pre)\n",
    "    print(f'Model {model_names[i]}:{score}')\n",
    "    # Append the RMSE to the list\n",
    "    rmse_list.append(score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "22d4be76",
   "metadata": {},
   "outputs": [],
   "source": [
    "best_model_index = rmse_list.index(min(rmse_list))\n",
    "best_model = models[best_model_index]\n",
    "y_pred = best_model.predict(x_test_reduced)\n",
    "test_score = rmse(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "23447a23",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best model CatBoostRegressor:16.131106731116194\n"
     ]
    }
   ],
   "source": [
    "print(f'Best model {model_names[best_model_index]}:{test_score}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "b8e5cc45",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>contest-tmp2m-14d__tmp2m</th>\n",
       "      <th>index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>30.352916</td>\n",
       "      <td>375734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>30.451827</td>\n",
       "      <td>375735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>30.137818</td>\n",
       "      <td>375736</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>30.768522</td>\n",
       "      <td>375737</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>30.666841</td>\n",
       "      <td>375738</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   contest-tmp2m-14d__tmp2m   index\n",
       "0                 30.352916  375734\n",
       "1                 30.451827  375735\n",
       "2                 30.137818  375736\n",
       "3                 30.768522  375737\n",
       "4                 30.666841  375738"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample_solution[target] = y_pred\n",
    "sample_solution.to_csv('result.csv' ,index = False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "vscode": {
   "interpreter": {
    "hash": "88279d2366fe020547cde40dd65aa0e3aa662a6ec1f3ca12d88834876c85e1a6"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
